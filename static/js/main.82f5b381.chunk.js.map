{"version":3,"sources":["assets/close.svg","Header.js","Intro.js","Buttons.js","Gallery.js","Modal.js","Footer.js","SavedBooks.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Intro","href","aria-label","rel","target","Component","Buttons","props","name","id","map","button","key","onClick","handleClick","Gallery","tabIndex","openModalHandler","src","bookImg","alt","bookTitle","bookAuthor","Modal","onKeyUp","event","which","closeModalHandler","document","addEventListener","this","removeEventListener","modal","selectedBook","isShowing","close","title","author","description","value","book_image","handleSelect","Footer","SavedBooks","removeBook","bookSrc","bookalt","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","getBooks","url","state","urlCategory","axios","method","format","then","res","setState","bookArray","data","results","books","filter","book","rank","parseInt","preventDefault","database","ref","push","savedBooks","on","result","newState","val","object","bookId","child","remove","i","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.82f5b381.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.d0301819.svg\";","import React from 'react';\n\nfunction Header() {\n        return(\n            <header>\n                <div className=\"headerContainer wrapper\">\n                    <h1>Bestsellers to Read</h1>\n                </div>\n            </header>\n        );\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass Intro extends Component { \n    render() {\n        return (\n            <section className=\"wrapper\">\n                <h2>Looking for your next book to read? Choose a category below and browse the bestselling books per the <a href=\"https://www.nytimes.com/books/best-sellers/\" aria-label=\"link to New York Times bestsellers list\" rel=\"noopener noreferrer\" target=\"_blank\">New York Times</a> click on a book to read more and create a list of the ones you want to read. </h2>\n            </section>\n        )\n    }\n}\n\nexport default Intro;","import React from 'react';\n\nfunction Buttons(props) {\n    \n    const buttonInfo = [\n        { name: \"Non Fiction\", id: \"combined-print-and-e-book-nonfiction\", \"aria-label\": \"click to generate non fiction books\" },\n        { name: \"Fiction\", id: \"combined-print-and-e-book-fiction\", \"aria-label\": \"click to generate fiction books\" },\n        { name: \"Travel\", id: \"travel\", \"aria-label\": \"click to generate travel books\" },\n        { name: \"Sports\", id: \"sports\", \"aria-label\": \"click to generate sports books\" },\n        { name: \"Young Adult\", id: \"young-adult-hardcover\", \"aria-label\": \"click to generate young adult books\" },\n        { name: \"Comedy\", id: \"humor\", \"aria-label\": \"click to generate comedy books\" },\n        { name: \"Business\", id: \"business-books\", \"aria-label\": \"click to generate business books\" },\n        { name: \"Crime & Law\", id: \"crime-and-punishment\", \"aria-label\": \"click to generate crime & law books\" },\n\n    ]\n    \n    return (\n        <ul className=\"bookSelect wrapper\">\n            {buttonInfo.map((button) => {\n                return(\n                <li key={button.id}>\n                    <button\n                    id={button.id}\n                    aria-label={button[\"aria-label\"]}\n                    onClick={props.handleClick}\n                    >{button.name}</button>\n                </li>\n                )\n            })}\n        </ul>\n    );\n}\n\nexport default Buttons;","import React from 'react';\n\nfunction Gallery(props) {\n    \n        return (\n            <li >\n                <button tabIndex=\"0\" onClick={() => props.openModalHandler(props.id)}>\n                    <img \n                        id={props.id}\n                        src={props.bookImg} \n                        alt={`${props.bookTitle} by ${props.bookAuthor}`} \n                        \n                    />\n                </button>\n            </li>\n        );\n}\n\n\nexport default Gallery;","import React, { Component } from 'react';\nimport close from './assets/close.svg';\n\n// Function component to show the modal on the page using the .filter() to display only the content of the book that is clicked or focused\n\nclass Modal extends Component {\n\n   \n// Modal will close when the escape key is pressed\n    onKeyUp = (event) => {\n        if (event.which === 27) {\n            this.props.closeModalHandler(event)\n        } \n    }\n\n    componentDidMount() {\n        document.addEventListener(\"keyup\", this.onKeyUp);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keyup\", this.onKeyUp)\n    }\n\n    render() {\n        const modal = this.props.selectedBook;\n    return(\n       \n     <div>\n         {this.props.isShowing === true\n                ? <div className=\"modal\" id=\"modal\">\n                    <div className=\"modalContent wrapper\">\n                        <span tabIndex=\"5\" className=\"close\" aria-label=\"close\" onClick={this.props.closeModalHandler}><img src={close} alt=\"\"></img></span>\n                        <h4 tabIndex=\"1\"><span>{modal.title}</span> by {modal.author}</h4>\n                        <p tabIndex=\"2\">{modal.description}</p>\n                        <img tabIndex=\"3\" value={modal.book_image}className=\"book\" src={modal.book_image} alt={`${modal.title} by ${modal.author}`}/>\n                        <button onClick={(event) => this.props.handleSelect(event)}><i tabIndex=\"4\" className=\"fas fa-heart\"></i>Add to list</button>\n                    </div>\n                 </div>\n                : null\n         }\n\n    </div>  \n    )\n  }\n}\n\n\n\nexport default Modal;","import React from 'react';\n\nfunction Footer() {\n\n    return (\n        <footer>\n            <p>© Emma Walden 2020</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\nclass SavedBooks extends Component {\n\n// When escape or enter are pressed on a saved book it will remove it from the list\nonKeyUp = (event) => {\n    if (event.which === 27 || event.which === 13) {\n        this.props.removeBook(this.props.id)\n    }\n}\n\ncomponentDidMount() {\n    document.addEventListener(\"keyup\", this.onKeyUp);\n}\n\ncomponentWillUnmount() {\n    document.removeEventListener(\"keyup\", this.onKeyUp)\n}\nrender () {\n    \n    return (\n        <li tabIndex=\"0\">\n            <i\n            aria-label=\"close\"\n            onClick={() => this.props.removeBook(this.props.id)} className=\"fas fa-times\">\n            </i>\n            <img\n            src={this.props.bookSrc}\n            alt={this.props.bookalt} \n            />\n        </li>\n        );\n    } \n}\n\n\nexport default SavedBooks;","// firebase.js\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Initialize Firebase\nconst config = {\n    apiKey: \"AIzaSyDRFzWvnZt8Xyet3LYIdEtkJ-MI2mXHTsw\",\n    authDomain: \"project-five-7d718.firebaseapp.com\",\n    databaseURL: \"https://project-five-7d718.firebaseio.com\",\n    projectId: \"project-five-7d718\",\n    storageBucket: \"project-five-7d718.appspot.com\",\n    messagingSenderId: \"167738762781\",\n    appId: \"1:167738762781:web:e43bcfd388626767ed08f4\"\n};\n\n\nfirebase.initializeApp(config);\n\n// this exports the CONFIGURED version of firebase\nexport default firebase;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Styles/App.scss';\nimport Header from './Header.js';\nimport Intro from './Intro.js';\nimport Buttons from './Buttons.js';\nimport Gallery from './Gallery.js';\nimport Modal from './Modal.js';\nimport Footer from './Footer.js';\nimport SavedBooks from './SavedBooks.js';\nimport firebase from './firebase.js';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      bookArray: [],\n      urlCategory: \"combined-print-and-e-book-fiction\",\n      // whether the modal is showing or not\n      isShowing: false,\n      selectedBook: {},\n      // empty array to store books to push to firebase\n      savedBooks: [],\n      \n    };\n  };\n\n\n  componentDidMount() {\n    // Go get book information from API - NYT Books\n    \n    this.getBooks();\n\n    // variable that references the firebase database\n    const dbRef = firebase.database().ref();\n    // event listener to fire every time there is a change in the database\n    dbRef.on('value', (result) => {\n      const newState = [];\n      // Store the response from firebase in this variable\n      const data = result.val();\n      // The data comes back in an object so we loop over it \n      for (let key in data) {\n        // push each book to the new state array \n        newState.push({key: key, object: data[key]});\n      }\n      this.setState({\n        // update the component's state using the newState array\n        savedBooks: newState\n      })\n\n      });\n      \n    \n  };\n\n  getBooks = () => {\n    const key = 'E1ntAP6SqFYuIsPBrhGwXxHj6xBbjTYV';\n    const url = `https://api.nytimes.com/svc/books/v3/lists/current/${this.state.urlCategory}.json?api-key=E1ntAP6SqFYuIsPBrhGwXxHj6xBbjTYV`;\n\n    axios({\n      method: 'GET',\n      url: url,\n      \"api-key\": key,\n      format: 'json',\n    }).then((res) => {\n      \n      this.setState({\n        bookArray: res.data.results.books\n        \n      });\n    });\n  };\n\n  handleClick = (event) => {\n    // figure out what button was clicked\n    // update the state \n    this.setState({\n      urlCategory: event.target.id\n    }, () => this.getBooks());\n  }\n\n  // Modal Functions - when a book is clicked or focused populate the description, title, image of that book in a modal\n  openModalHandler = (id) => {\n    // loop through the books array and use filter to return the particular book that was clicked\n    const selectedBook = this.state.bookArray.filter((book) => {\n      return book.rank === parseInt(id) + 1\n    });\n    \n    this.setState({ \n      // Modal is showing on the page\n      isShowing: true,\n      // Set the selected book to state\n      selectedBook: selectedBook[0]\n    });\n  }\n\n  closeModalHandler = () => {\n    \n      // Modal is not showing on the page\n      this.setState({\n        isShowing: false\n      });\n      \n  }\n\n  // This event will fire when there is a click to add a new book to the list\n  handleSelect = (event) => {\n    event.preventDefault();\n    const dbRef = firebase.database().ref();\n    dbRef.push(this.state.selectedBook);\n  \n    // If user clicks to add book to the list then close the modal\n    this.setState({\n      isShowing: false\n    });\n\n  };\n\n  // Function to remove books from the saved Books array on click\n  removeBook(bookId) {\n    const dbRef = firebase.database().ref();\n    dbRef.child(bookId).remove();\n    \n  }\n\n  render() {\n          \n    return (\n      <>\n        <Header />\n        <main>\n          <Intro />\n          {/* List of book categories to choose from that will populate new book images and descriptions */}\n          <Buttons handleClick={this.handleClick}/>\n          {/* Gallery of book images and descriptions */}\n            <ul className=\"bookGallery wrapper\">\n              {/* Mapping over the array of books from the API call */}\n              {this.state.bookArray.map((book, i) => {\n                // Displaying the book image to the page\n                return (\n                  <Gallery \n                    key={i} \n                    id={i}\n                    bookImg={book.book_image} \n                    bookTitle={book.title} \n                    bookAuthor={book.author} \n                    openModalHandler={this.openModalHandler} \n                  />\n                );\n              })}\n            </ul>\n          {/* On click of a selected book a modal populates with information about the chosen book */}\n          <Modal \n            selectedBook={this.state.selectedBook}\n            closeModalHandler={this.closeModalHandler}\n            isShowing={this.state.isShowing}\n            handleSelect={this.handleSelect}\n          /> \n          {/* Section at the bottom of the page where the saved books populate */}\n          <section className=\"bookList\" >\n            <div className=\"wrapper\">\n              <h5>Books To Read</h5>\n              {/* When the saved books list is empty display a message */}\n              {this.state.savedBooks.length === 0\n                ? <h6>There are no books in your list yet, click on a book to add it to your list!</h6>\n                : null}\n              <ul className=\"savedBooks\">\n                {this.state.savedBooks.map((book) => {\n                  return (<SavedBooks \n                    key={book.key}\n                    id={book.key}\n                    bookSrc={book.object.book_image}\n                    bookalt={`${book.object.title} by ${book.object.author}`}\n                    removeBook={this.removeBook}\n                  />)\n                })} \n              </ul>\n            </div>\n          </section>\n      </main>\n      <Footer />\n    </>\n    );\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}